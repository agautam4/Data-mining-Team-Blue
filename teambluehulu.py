# -*- coding: utf-8 -*-
"""teambluehulu.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/agautam4/5bca44ad037a601c479fb10ec90f7220/teambluehulu.ipynb
"""

import plotly.graph_objects as go
import numpy as np
from plotly.offline import init_notebook_mode, iplot
import pandas as pd
from sklearn import preprocessing
from sklearn.preprocessing import MinMaxScaler
import plotly.figure_factory as ff
from collections import Counter

df = pd.read_csv("/content/sample_data/hulu_titles.csv")
df = df.fillna("")
df['season_count'] = df.apply(lambda x : x['duration'].split(" ")[0] if "Season" in x['duration'] else "", axis = 1)
df['duration'] = df.apply(lambda x : x['duration'].split(" ")[0] if "Season" not in x['duration'] else "", axis = 1)

df.head()

"""# New Section

Type of content
"""

col = "type"
grouped = df[col].value_counts().reset_index()
grouped = grouped.rename(columns = {col : "count", "index" : col})

## plot
trace = go.Pie(labels=grouped[col], values=grouped['count'], pull=[0.05, 0], marker=dict(colors=["#6ad49b", "#a678de"]))
layout = go.Layout(title="", height=400, legend=dict(x=0.1, y=1.1))
fig = go.Figure(data = [trace], layout = layout)
iplot(fig)

"""Tv shows and movies released over the years"""

col = "release_year"

d1 = df[df["type"] == "TV Show"]
d2 = df[df["type"] == "Movie"]

vc1 = d1[col].value_counts().reset_index()
vc1 = vc1.rename(columns = {col : "count", "index" : col})
vc1['percent'] = vc1['count'].apply(lambda x : 100*x/sum(vc1['count']))
vc1 = vc1.sort_values(col)

vc2 = d2[col].value_counts().reset_index()
vc2 = vc2.rename(columns = {col : "count", "index" : col})
vc2['percent'] = vc2['count'].apply(lambda x : 100*x/sum(vc2['count']))
vc2 = vc2.sort_values(col)

trace1 = go.Bar(x=vc1[col], y=vc1["count"], name="TV Shows", marker=dict(color="#a678de"))
trace2 = go.Bar(x=vc2[col], y=vc2["count"], name="Movies", marker=dict(color="#6ad49b"))
data = [trace1, trace2]
layout = go.Layout(title="Content added over the years", legend=dict(x=0.1, y=1.1, orientation="h"))
fig = go.Figure(data, layout=layout)
fig.show()

d2 = d2[d2['duration'] != ""]

x1 = d2['duration'].fillna(0.0).astype(float)
fig = ff.create_distplot([x1], ['a'], bin_size=0.7, curve_type='normal', colors=["#6ad49b"])
fig.update_layout(title_text='Distplot with Normal Distribution')
fig.show()
print(x1)

"""What type of content are added over the years ?"""

col = "listed_in"
categories = ", ".join(d2['listed_in']).split(", ")
counter_list = Counter(categories).most_common(50)
labels = [_[0] for _ in counter_list][::-1]
values = [_[1] for _ in counter_list][::-1]
trace1 = go.Bar(y=labels, x=values, orientation="h", name="TV Shows", marker=dict(color="#a678de"))

data = [trace1]
layout = go.Layout(title="Content added over the years", legend=dict(x=0.1, y=1.1, orientation="h"))
fig = go.Figure(data, layout=layout)
fig.show()

"""Scattered plot between release year,country based on type"""

df['country'] = df['country'].apply(lambda x: "multi_country" if ',' in str(x) else x)
data1 = df
# Replace cells with multiple values with "multi value"
data1['listed_in'] = data1['listed_in'].apply(lambda x: "multi_category" if ',' in str(x) else x)
data2 = data1
g=sns.relplot(x='release_year',y='country',data=data2,hue='type',style='type')
g.fig.set_size_inches(10,5)
plt.show()

sns.pairplot(data2,hue="type")
plt.show()

data2.hist(bins=60)

data2.dtypes

"""
# New Section"""